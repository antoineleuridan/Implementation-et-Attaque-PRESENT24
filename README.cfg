

Leuridan Antoine 21805065
Devylder Baptiste 21800420

Pour ce projet nous avons utilisé les couples clair/chiffré de Antoine Leuridan soit (m1,c1) (a31947, 8f7f4b) et (m2,c2) (17e7de,166d33).

Dans un premier temps nous avions décidé de représenter notre registre et nos bits pas de tableaux d'entier mais arrivé a la derniere question nous nous sommes
rendu compte que la complexité de cette méthode etait bien trop élevé. Nous nous sommes donc dirigé vers les manipulation sur les binaires ce qui nous à permis
d'avoir un temps d'attaque approximatif de 2min30 celon les machines. 
Nous avons expliqué nos fonctions dans le fichier projetcrypto.h.

3.1.2) Pour trouver les elements commun des listes nous avons fait une recherche de collision. Pour chaque attaque nous trouvons approximativement
16777000 de collisions. Les deux couple de clair chiffré nous on permis de faire deux listes de collisions et nous avons pu isoler deux couple de clé
pouvant fonctionner, key1 <C1AB3B> & key2 <EDD09A> & key1 <D0C1A8> & key2 <EA78AE>. Nous les avons trouvé en cherchant les couples de clés communes
des deux listes de hits. 

Execution : make

Fichiers :

projetcrypto.h : headers, contient toutes nos fonctions et les explications de celles-ci.
question1.c : implementation des fonctions de la question1 cryptage.
main1.c : main qui execute les tests de la question1.
question2.c : implementation des fonctions de la question2 decryptage.
main2.c : main qui execute les tests de la question2.
question3.c : implementation des fonctions de la question3 attaque par le milieu.
main3.c : main qui execute l'attaque par le milieu.
mkfile.c : fichier lancer par la commande <make> qui permet d'avoir les informations d'execution du programme.
Makefile : makefile basique


Bien cordialement,
